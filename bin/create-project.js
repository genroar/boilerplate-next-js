#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const projectName = process.argv[2];
const projectPath = path.join(process.cwd(), projectName);

if (!projectName) {
  console.error('Please provide a project name.');
  process.exit(1);
}

const filesToCreate = [
  { path: 'pages/index.js', content: `export default function Home() { return <h1>Hello, world!</h1>; }` },
  { path: 'app/globals.css', content: `body { margin: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; }` },
  { path: 'package.json', content: `{"name": "${projectName}", "version": "1.0.0", "scripts": {"dev": "next dev", "build": "next build", "start": "next start"}, "dependencies": {"next": "latest", "react": "latest", "react-dom": "latest"}}` },
  { path: 'next.config.js', content: `module.exports = { reactStrictMode: true };` },
  { path: 'jsconfig.js', content: `module.exports = { reactStrictMode: true };` },
  { path: 'postcss.config.mjs', content: `module.exports = { reactStrictMode: true };` },
  { path: 'tailwind.config.js', content: `module.exports = { reactStrictMode: true };` },
  { path: '.gitignore', content: `node_modules\n.next\nout\n` },
  { path: 'README.md', content: `# ${projectName}\n\nGenerated by create-project script.` }
];

fs.mkdirSync(projectPath, { recursive: true });
fs.mkdirSync(path.join(projectPath, 'pages'), { recursive: true });
fs.mkdirSync(path.join(projectPath, 'styles'), { recursive: true });

filesToCreate.forEach(file => {
  const filePath = path.join(projectPath, file.path);
  fs.mkdirSync(path.dirname(filePath), { recursive: true });
  fs.writeFileSync(filePath, file.content);
});

console.log(`Project ${projectName} created successfully.`);
